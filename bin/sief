#!/usr/bin/env node --harmony

var package = require('../package.json');
var program = require('commander');
var path = require('path');
var log4js = require('log4js');

log4js.configure(__dirname + '/../lib/log4js-config.json');

var logger = log4js.getLogger('cli');

function resolvePlugin(files) {
  var cwd = process.cwd();
  return files.map(function(file) {
    return path.normalize(cwd + '/' + file);
  });
}

program
  .version(package.version)
  .usage('[options] <plugin|dir ...>')
  .option('-i, --ignore-time [seconds]', 'specify seconds during which same requests will be ignored [300]', 300)
  .option('-p, --port [port]', 'specify the port sief server listening to [3000]', 3000)
  //.option('-v, --verbose', 'show more info')
  .option('-l, --log-level [level]', 'set log level [INFO]', 'INFO')
  .parse(process.argv);

if (program.verbose) {
  process.env.DEBUG = '*';
  // the first time of requiring 'debug' must be called after DEBUG setting
  require('debug');
}

program.plugins = resolvePlugin(program.args);

var options = {
  ignoreTime: program.ignoreTime,
  port: program.port,
  plugins: program.plugins,
  logLevel: program.logLevel
};

log4js.setGlobalLogLevel(options.logLevel);

logger.debug('Options: ');
for (var o in options) {
  logger.debug('  - ' + o + ': ' + options[o]);
}

var api = require('../index');

api.serve(options);

